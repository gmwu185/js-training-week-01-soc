{"version":3,"sources":["main.js"],"names":["todoData","todoStaredListLocalStoragePath","EL_addTodo","document","getElementById","EL_todoList","EL_newTodo","EL_taskCount","EL_clearTask","clearCheckModal","bootstrap","Modal","keyboard","noStringModal","pushTadoNewData","unshift","id","Math","floor","Date","now","title","value","completed","getLocalStorageData","JSON","parse","localStorage","getItem","saveLocalStorageData","data","setItem","stringify","render","renderTodoData","renderStr","forEach","item","innerHTML","textContent","length","addEventListener","trim","toggle","e","keyCode","preventDefault","newIndex","target","dataset","action","key","splice","console","log"],"mappings":"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","file":"all.js","sourcesContent":["/** 第一週主線作業說明：\n ** https://hackmd.io/@hexschool/HJDbvkFqU/%2FF2N_naHkTFeJE0DDeI_OgA\n */\n\n\n/* 資料\n-------------------------------------------------- */\nlet todoData = [\n  // {\n  //   id: 1,\n  //   title: '這是預設的第一個待辨項目',\n  //   completed: false,\n  // }\n];\nlet todoStaredListLocalStoragePath = 'todoStaredList';\n/* End of 資料\n-------------------------------------------------- */\n\n\n/* 取得 DOM 元素\n-------------------------------------------------- */\nlet EL_addTodo = document.getElementById('addTodo');\nlet EL_todoList = document.getElementById('todoList');\nlet EL_newTodo = document.getElementById('newTodo');\nlet EL_taskCount = document.getElementById('taskCount');\nlet EL_clearTask = document.getElementById('clearTask');\nlet clearCheckModal = new bootstrap.Modal(document.getElementById('clearCheckModal'), {\n  keyboard: true\n})\nlet noStringModal = new bootstrap.Modal(document.getElementById('noStringModal'), {\n  keyboard: true\n})\n/* End of 取得 DOM 元素\n-------------------------------------------------- */\n\n/* 資料處理\n-------------------------------------------------- */\nconst pushTadoNewData = () => {\n  /** .push() 新增資料到陣列內最後一筆 */\n  // todoData.push({\n  //   id: Math.floor( Date.now() ),\n  //   title: EL_newTodo.value,\n  //   completed: false,\n  // });\n\n  /** 將原本陣列新增到最後一筆改用 .unshift() 加最前一筆 */\n  todoData.unshift({\n    id: Math.floor( Date.now() ),\n    title: EL_newTodo.value,\n    completed: false,\n  });\n};\nconst getLocalStorageData = () => JSON.parse( localStorage.getItem( todoStaredListLocalStoragePath ) );\nconst saveLocalStorageData = (data) => localStorage.setItem( todoStaredListLocalStoragePath, JSON.stringify( data ) );\n/* End of 資料處理\n-------------------------------------------------- */\n\n/* 輸出運算\n-------------------------------------------------- */\nconst render = ( renderTodoData ) => {\n  let renderStr = '';\n  renderTodoData.forEach( (item) => {\n    renderStr += `\n      <li class=\"list-group-item rounded-pill shadow mx-3 mb-3\">\n        <div class=\"d-flex pt-1\">\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input c-form__check\" ${item.completed ? 'checked' : ''} data-action=\"complete\" data-id=\"${item.id}\">\n            <label class=\"form-check-label c-form__label ${item.completed ? 'js-completed' : ''}\" data-action=\"complete\" data-id=\"${item.id}\"> ${item.title}</label>\n          </div>\n          <a class='ml-auto c-form__closeBtn' href=\"#\" aria-label=\"Close\">\n            <span class='material-icons c-form__closeBtn__icon' aria-hidden=\"true\" data-action=\"remove\" data-id=\"${item.id}\">remove_circle_outline</span>\n          </a>\n        </div>\n      </li>\n    `;\n    // <button type=\"button\" class=\"close ml-auto\" aria-label=\"Close\"> \n    //   <span aria-hidden=\"true\" data-action=\"remove\" data-id=\"${item.id}\">&times;</span>\n    // </button>\n  });\n  EL_todoList.innerHTML = renderStr;\n  EL_taskCount.textContent = renderTodoData.length;\n};\n/* End of 輸出運算\n-------------------------------------------------- */\n\n/* 初始化執行\n-------------------------------------------------- */\n// console.log('getLocalStorageData()', getLocalStorageData());\nif ( getLocalStorageData() !== null ) {\n  // 如果存於 LocalStorage 的 todo data 資料長度不為 0 ，直接將資料賦予到 todoData [] 並輸出畫面\n  todoData = getLocalStorageData();\n  render( todoData );\n} else {\n  // 直接將 todoData [] 處理輸出畫面\n  render( todoData );\n}\n/* End of 初始化執行\n-------------------------------------------------- */\n\n\n/* 元素綁定\n-------------------------------------------------- */\n\n/*----------  新加資料並清空 input value 字串  ----------*/\n\n/** 寫法一 */\n// EL_addTodo.addEventListener('click', () => {\n//   if (EL_newTodo.value.trim() !== '') {\n//     pushTadoNewData();\n//     render(todoData);\n//     EL_newTodo.value = '';\n//   }\n// });\n\n/** 寫法二 */\nEL_addTodo.addEventListener('click', () => {\n  EL_newTodo.value.trim() !== '' ? (\n    pushTadoNewData(),\n    saveLocalStorageData( todoData ),\n    render( todoData ), \n    EL_newTodo.value = ''\n  )\n    : noStringModal.toggle()\n  });\n  \n/** 直接在 input 按下 enter 觸發相關執行內容 */\nEL_newTodo.addEventListener('keydown', (e) => {\n  // if ( e.keyCode === 13 ){\n  //   EL_newTodo.value.trim() !== '' ? (\n  //     pushTadoNewData(), \n  //     render(todoData), \n  //     EL_newTodo.value = ''\n  //   )\n  //     :\"\"\n  // }\n  e.keyCode === 13 ? EL_newTodo.value.trim() !== '' ? (\n        pushTadoNewData(), \n        saveLocalStorageData( todoData ),\n        render( todoData ), \n        EL_newTodo.value = ''\n      )\n      : noStringModal.toggle()\n    : \"\"\n}, false);\n\n\n/*----------  /新加資料並清空 input value 字串  ----------*/\n\n/*----------  清空所有 todo 陣列資料  ----------*/\nEL_clearTask.addEventListener('click', (e) => {\n  e.preventDefault();\n  todoData = [];\n  saveLocalStorageData( todoData );\n  render( todoData );\n});\n/*----------  /清空所有 todo 陣列資料  ----------*/\n\n/*----------  點按刪除按鈕對應資料索引刪除資料  ----------*/\n\n/** 寫法一 */\n// EL_todoList.addEventListener('click', (e) => {\n//   let newIndex = 0;\n//   if (e.target.dataset.action == 'remove') {\n//     todoData.forEach(function (item, key) {\n//       if (e.target.dataset.id == item.id) {\n//         newIndex = key;\n//       }\n//     })\n//     todoData.splice(newIndex, 1);\n//     render(todoData);\n//   }\n// });\n\n/** 寫法二 */\nEL_todoList.addEventListener('click', (e) => {\n  let newIndex = 0;\n  \n  return e.target.dataset.action == 'remove' ? (\n    todoData.forEach( \n      \n      /** 寫法一 */\n      // (item, key) => {\n      //   // e.target.dataset.id == item.id ? newIndex = key : \"\" , \n      //   if (e.target.dataset.id == item.id ) {\n      //     // console.log('item.id', item.id, 'newIndex', key)\n      //     newIndex = key;\n      //     todoData.splice(newIndex, 1);\n      //     saveLocalStorageData( todoData );\n      //     render( todoData );\n      //   }\n      // }\n\n      /** 寫法二 */\n      (item, key) => e.target.dataset.id == item.id ? ( \n        newIndex = key,\n        todoData.splice(newIndex, 1), \n        console.log('remove todoData', todoData),\n        saveLocalStorageData( todoData ),\n        render( todoData ) \n      )\n        : \"\" \n\n    )\n  )\n    : \"\"\n});\n\n/*----------  /點按刪除按鈕對應資料索引刪除資料  ----------*/\n\n\n/*----------  勾選完成後處理資料並更新畫面  ----------*/\n/** 寫法 1 \n * 拆分將資料處理後的運算結果透過畫面處理函式更新畫面\n*/\n// EL_todoList.addEventListener('click', (e) => {\n//   if (e.target.dataset.action == 'complete') {\n//     todoData.forEach(function (item) {\n//       if (e.target.dataset.id == item.id) {\n//         if (item.completed) {\n//           item.completed = false;\n//         } else {\n//           item.completed = true;\n//         }\n//       }\n//     })\n//     render(todoData);\n//   }\n// });\n\n/** 寫法 2 \n * 透過 ',' 接 render(todoData) 函式\n*/\n// EL_todoList.addEventListener('click', (e) => {\n//   if (e.target.dataset.action == 'complete') {\n//     todoData.forEach((item) => {\n//       e.target.dataset.id == item.id ? (item.completed ? item.completed = false : item.completed = true) : '';\n//     }), render(todoData)\n//   }\n// });\n\n/** 寫法 3 \n * 透過 () 讓函式 return 三元運算子成為一個運算項目，並透過單行處理完相關內容，可讀性差。\n*/\n// EL_todoList.addEventListener('click', (e) => {\n//   e.target.dataset.action == 'complete' ? ( todoData.forEach((item) => e.target.dataset.id == item.id ? (item.completed ? item.completed = false : item.completed = true) : ''), render(todoData) ) : \"\"\n// });\n\n/** 寫法 4 \n * 三元運算子處理三層的結果，透過斷行與 () 增加可讀性，但還是不直觀不過比較簡裋。\n*/\nEL_todoList.addEventListener('click', (e) => {\n  e.target.dataset.action == 'complete' ? ( \n    todoData.forEach( (item) => e.target.dataset.id == item.id ? (\n        item.completed ? item.completed = false \n          : item.completed = true\n      ) \n      : ''\n    ), \n    saveLocalStorageData( todoData ),\n    render( todoData )\n  ) : \"\"\n});\n\n/*----------  /勾選完成後處理資料並更新畫面  ----------*/\n\n/* End of 元素綁定\n-------------------------------------------------- */\n"]}